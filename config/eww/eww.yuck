(deflisten brightness `scripts/brightness_monitor.sh`)
(deflisten volume :initial 0.0 `scripts/volume_monitor.sh get-volume`)
(deflisten volume_muted :initial 0.0 `scripts/volume_monitor.sh get-muted`)
(deflisten cava `scripts/cava/cava-pipe.sh`)
(deflisten workspaces `scripts/hyprland-events 9`)
(deflisten radio `scripts/radio/radio_handler.sh`)

(defvar radiopipe "/tmp/eww/radio/pipe")
(defvar radio_reveal false)
(defvar isMusicPlaying false)
(defvar activeRadio "JPopsuki")
(defvar radios '{
   "JPopsuki": "http://jpopsuki.fm:8000/autodj.m3u",
   "Listen.Moe": "https://listen.moe/stream"
}')

(defwidget bar []
  (centerbox :orientation "h" :class "mainbar"
    (box :class "left" (left))
    (box :class "center" :halign "start" :hexpand false :vexpand false (center))
    (box :class "right" :halign "end" :hexpand false :vexpand false (right))
  )
)

(defwidget left []
  (box :class "container" :orientation "h" :halign "start" :valign "center"
    (musicplayer_controls)
    (audio_visualizer)
  )
)

(defwidget center []
  (workspaces)
)


(defwidget right []
  (box :orientation "h" :space-evenly false :spacing 10
    (metric :label ""
            :value {brightness}
            :min 0
            :max 19394
            :onchange "")
    (metric :label "${volume_muted == false ? "" : ""}"
            :value {volume * 100}
            :min 0
            :max 101
            :onchange "")
    (image  :path "../../icons/battery/battery-${round(EWW_BATTERY.BAT0.capacity / 10, 0) * 10}.svg"
            :image-height 15
            :class "battery"
            :tooltip "${EWW_BATTERY.BAT0.capacity}%"
    )
  )
)

(defwidget audio_visualizer []
  (label :text "${cava}" :class "text")
)

(defwidget musicplayer_controls []
  (box :orientation "h" :halign "start" :valign "center" :space-evenly false :spacing 5
    (play_pause)
    (eventbox :cursor "pointer"
      (button :class "radio_list_btn" 
        :onclick `eww update radio_reveal=${!radio_reveal}`
        {captures(radio, "icy-title: (.+)|Title: (.+)")[0]?.[1]}
      )
    )
  )
)

(defwidget play_pause []
  (eventbox
       :orientation "h"
       :space-evenly false
       :spacing 0
       :halign "center"
       :cursor "pointer"
    (button
      :class "playpause"
      :onclick {isMusicPlaying ? `echo "stop" >${radiopipe}` : `echo "play ${radios[activeRadio]}" >${radiopipe}`}
      :valign "center"
      {isMusicPlaying ? "󰏤" : "󰐊"}
    )
  )
)

(defwidget workspaces []
  (box :orientation "h"
       :halign "center"
       :valign "center"
       :class "container"
    (for workspace in {workspaces.workspaces}
      (box :class "workspace_status ${workspace.id == workspaces.active ? "active" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
         :valign "center"
         :halign "center"
         :height 0
         :width 0
      )
    )
  )
)

(defwidget radio_list []
  (box :orientation "v" :class "radio_list"
    (for radio in {jq(radios, 'keys')}
      (eventbox :class "playpause" :cursor "pointer"
        (button
          :onclick `eww update activeRadio=${radio} && echo "play ${radios[radio]}" >${radiopipe}`
          "${radio}"
        )
      )
    )
  )
)

(defwidget metric [label value onchange min max]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min min
           :max max
           :tooltip "${value}%"
           :active {onchange != ""}
           :value value
           :onchange onchange
    )
  )
)

(defwindow statusbar
  :monitor 0
  :exclusive true
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "30px"
                      :anchor "bottom center")
  (bar)
)

(defwindow radio
  :monitor 0
  :exclusive false
  :namespace "radio"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "0"
                      :height "0"
                      :anchor "bottom left")
  (expander :expanded true
    (revealer
      :reveal radio_reveal
      :transition "slideup"
      :duration "350ms"
      (radio_list)
    )
  )
)
