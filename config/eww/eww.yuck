(deflisten brightness `inotifywait --event close_write --monitor /sys/class/backlight/intel_backlight/brightness | while read; do cat /sys/class/backlight/intel_backlight/brightness; done`)
(deflisten volume :initial 0.0 `scripts/volume_monitor.sh`)
(deflisten workspaces `scripts/hyprland_events.sh workspaces`)

(defwidget bar []
  (centerbox :orientation "h"
    (workspaces)
    (box)
    (sidestuff)))

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    (metric :label "î ´"
            :value {EWW_BATTERY.BAT0.capacity}
	    :min 0
	    :max 101
            :onchange "")
    time))

(defwidget workspaces []
  (box :class "workspaces"
       :orientation "v"
       :space-evenly false
       :spacing 0
       :valign "center"
    (box :orientation "h"
         :space-evenly true
         :halign "start"
         :spacing 8
      (for workspace in {workspaces.workspaces}
        (button
          :class "workspace_btn"
	  :onclick "hyprctl dispatch workspace ${workspace.id}"
	  :valign "center"
          {workspace.id}
        )
      )
    )
    (box :orientation "h"
         :space-evenly true
         :halign "start"
	 :valign "start"
         :spacing 8
      (for workspace in {workspaces.workspaces}
        (box :class "workspace_status ${workspace.id == workspaces.active ? "active" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
	     :valign "center"
	     :halign "center"
	     :height 0
	     :width 0
	)
      )
    )
  )
)

(defwidget metric [label value onchange min max]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min min
           :max max
           :active {onchange != ""}
           :value value
           :onchange onchange)))




(defpoll time :interval "10s"
  "date '+%H:%M %b %d, %Y'")

(defwindow bar
  :monitor 0
  :exclusive true
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "30px"
                      :anchor "top center")
  (bar))

