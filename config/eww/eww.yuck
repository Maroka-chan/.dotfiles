(deflisten brightness :initial 0.0 `scripts/brightness_monitor.sh`)
(deflisten volume :initial 0.0 `scripts/volume_monitor.sh get-volume`)
(deflisten volume_muted :initial 0.0 `scripts/volume_monitor.sh get-muted`)
(deflisten cava `scripts/cava/cava-pipe.sh`)
(deflisten workspaces :initial '{}' `scripts/hyprland-events 9`)
(deflisten radio `scripts/radio/radio_handler.sh`)

(defpoll time :interval "10s"
  "date '+%H:%M %b %d, %Y'")

(defvar radiopipe "/tmp/eww/radio/pipe")
(defvar radio_reveal false)
(defvar isMusicPlaying false)
(defvar activeRadio "JPopsuki")
(defvar radios '{
   "Asia_Dream": "https://cast1.torontocast.com:2120/?type=http&nocache=181711",
   "JPopsuki": "http://jpopsuki.fm:8000/autodj.m3u",
   "Listen.Moe": "https://listen.moe/stream",
   "Tsubaki": "http://stream.tsubakianimeradio.com:9000/play.mp3?ver=274579"
}')

(defvar controls_reveal false)

(defwidget bar []
  (centerbox :orientation "h" :class "mainbar"
    (box :class "left" :halign "start" (left))
    (box :class "center" :halign "center" (center))
    (box :class "right" :halign "end" (right))
  )
)

(defwidget left []
  (box :class "container" :orientation "h" :halign "start" :valign "center" :space-evenly false
    (eventbox :cursor "pointer"
      (button
        :class "radio_btn"
        :valign "center"
        :onclick `eww update radio_reveal=${!radio_reveal}`
        {"󰐹"}
      )
    )
    (musicplayer_controls)
  )
)

(defwidget center []
  (box :orientation "h" :space-evenly false
    (label :text {substring(cava, 0, 8)} :class "text")
    (workspaces)
    (label :text {substring(cava, 8, 8)} :class "text")
  )
)


(defwidget right []
  (box :orientation "h" :space-evenly false :spacing 10
    (metric :label ""
            :value {brightness}
            :min 0
            :max 19394
            :onchange "")
    (metric :label "${volume_muted == false ? "" : ""}"
            :value {volume * 100}
            :min 0
            :max 101
            :onchange "")
    (box :orientation "h"
         :class "battery"
         :space-evenly false
      (scale :min 0
             :max 101
             :tooltip "${EWW_BATTERY.BAT0.capacity}%"
             :active false
             :value {EWW_BATTERY.BAT0.capacity}
      )
    )
    (eventbox :cursor "pointer"
      (button
        :class "radio_btn"
        :valign "center"
        :onclick `eww update controls_reveal=${!controls_reveal}`
        (label :text {time} :class "timedate")
      )
    )
  )
)

(defwidget musicplayer_controls []
  (box :orientation "h" :halign "start" :valign "center" :space-evenly false :spacing 5
    (play_pause)
    (label :text {captures(radio, "icy-title: (.+)|Title: (.+)")[0]?.[1] ?: ""})
  )
)

(defwidget play_pause []
  (eventbox
       :halign "center"
       :cursor "pointer"
    (button
      :class "playpause"
      :onclick {isMusicPlaying ? `echo "stop" >${radiopipe}` : `echo "play ${radios[activeRadio]}" >${radiopipe}`}
      :valign "center"
      {isMusicPlaying ? "󰏤" : "󰐊"}
    )
  )
)

(defwidget workspaces []
  (box :orientation "h"
       :halign "center"
       :valign "center"
       :class "container workspaces"
    (for workspace in {workspaces.workspaces}
      (box :class "workspace_status ${workspace.id == workspaces.active ? "active" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
         :valign "center"
         :halign "center"
         :height 0
         :width 0
      )
    )
  )
)

(defwidget radio_list []
  (box :orientation "v" :class "radio_list"
    (for radio in {jq(radios, 'keys')}
      (eventbox :class "playpause" :cursor "pointer"
        (button :class "radio_item ${radio == activeRadio ? "active" : ""}"
          :onclick `eww update activeRadio=${radio} && echo "play ${radios[radio]}" >${radiopipe}`
          "${radio}"
        )
      )
    )
  )
)

(defwidget controls_panel []
  (box :orientation "v" :class "controls_panel" :space-evenly false
    (graph
      :value {EWW_NET.wlp0s20f3.NET_DOWN}
      :time-range "30s"
      :width 200
      :height 80
    )
    (circular-progress
      :value {EWW_BATTERY.BAT0.capacity}
      :thickness 6
      :width 70
      :height 70
      :class "battery_circle"
      (label :text "${EWW_BATTERY.BAT0.capacity}")
    )
  )
)

(defwidget metric [label value onchange min max]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min min
           :max max
           :tooltip "${value}%"
           :active {onchange != ""}
           :value value
           :onchange onchange
    )
  )
)

(defwindow statusbar
  :monitor 0
  :exclusive true
  :geometry (geometry :x "0"
                      :y "0"
                      :width "100%"
                      :height "30px"
                      :anchor "bottom center")
  (bar)
)

(defwindow radio
  :monitor 0
  :exclusive false
  :namespace "radio"
  :geometry (geometry :x "0"
                      :y "-2"
                      :width "0"
                      :height "2"
                      :anchor "bottom left")
  (revealer
    :reveal radio_reveal
    :transition "slideup"
    :duration "350ms"
    (radio_list)
  )
)

(defwindow controls
  :monitor 0
  :exclusive false
  :namespace "controls"
  :geometry (geometry :x "-2"
                      :y "0"
                      :width "2"
                      :height "100%"
                      :anchor "center right")
  (revealer
    :reveal controls_reveal
    :transition "slideleft"
    :duration "350ms"
    (controls_panel)
  )
)
